
service: sls-page-tracker
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  profile: raf-tech
  region: ap-southeast-1
  memorySize: 128

# you can overwrite defaults here
#  stage: dev

# you can add statements to the Lambda function's IAM Role here
  iam:
    deploymentRole: arn:aws:iam::801774630682:role/Tech-Web-Serverless-Deploy-Role
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.py'
#    - '!exclude-me-dir/**'
#    - include-me.py
#    - include-me-dir/**

functions:
  pagetracker:
    handler: handler.handle_s3_view_log
    logRetentionInDays: 30
    timeout: 10
    events:
      - s3:
          bucket: ${cf:raf-tech-website-stack.TechWebsiteAccessLogsBucket}
          existing: true
          event: s3:ObjectCreated:*
          rules:
            - prefix: logs/
#    The following are a few example events you can configure
#      - httpApi:
#          path: /users/create
#          method: get
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Description: Serverless Stack for Dynamo page-tracking functionality
  Resources:
    PageTrackTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PageTrackTable
        AttributeDefinitions:
         -
           AttributeName: UserPages
           AttributeType: S
         -
           AttributeName: SortKey
           AttributeType: S

        KeySchema:
          -
            AttributeName: UserPages
            KeyType: HASH
          -
            AttributeName: SortKey
            KeyType: RANGE

        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 2
        SSESpecification:
          SSEEnabled: True



#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
