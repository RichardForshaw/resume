# Template for defining Website and Continuous Deployment pipeline
AWSTemplateFormatVersion: 2010-09-09

Description: Stack for running the resume website

Parameters:
  WebsiteName:
    Type: String
    Description: The canonical name of the website, used to prefix all associated infrastructure.
    MinLength: 5
    MaxLength: 20
    AllowedPattern: '[a-zA-Z0-9\-]*'
  WebsiteBaseURL:
    Type: String
    Description: The intended URL of the website. This is required for accessing S3 website with custom domains.
    MinLength: 7
    MaxLength: 40
    AllowedPattern: '[a-zA-Z0-9\-\.]*'
  BlogWebsiteName:
    Type: String
    Description: The canonical name of the blog website, used to prefix all associated infrastructure.
    MinLength: 5
    MaxLength: 20
    AllowedPattern: '[a-zA-Z0-9\-]*'
  BlogWebsiteBaseURL:
    Type: String
    Description: The intended URL of the blog website. This is required for accessing S3 website with custom domains.
    MinLength: 7
    MaxLength: 40
    AllowedPattern: '[a-zA-Z0-9\-\.]*'
  WebsiteCertificateCNAMEValue:
    Type: String
    Description: Certificate value from AWS for the WWW CNAME record
    MinLength: 20
    AllowedPattern: '_[a-zA-Z0-9\.]+-validations.aws\.'
  WebsiteAPICertificateCNAMEValue:
    Type: String
    Description: Certificate value from AWS for the API CNAME record
    MinLength: 20
    AllowedPattern: '_[a-zA-Z0-9\.]+-validations.aws\.'
  WebsiteContactFormSourceAddress:
    Type: String
    Description: The source email address for sending emails from the contact form
    MinLength: 8
    AllowedPattern: '[a-zA-Z0-9_\.\+]+@[a-zA-Z0-9_\.]+'
  WebsiteContactFormTargetAddress:
    Type: String
    Description: The target email address for sending emails from the contact form
    MinLength: 8
    AllowedPattern: '[a-zA-Z0-9_\.\+]+@[a-zA-Z0-9_\.]+'
  AlertTargetPhoneNumber:
    Type: String
    Description: The SMS-enabled phone number for receiving alert notifications
    MinLength: 10
    AllowedPattern: '\+[0-9]*'
  CodeBuildProjectName:
    Type: String
    Description: Name of the build project for the Build Pipeline to access
    MinLength: 8
    AllowedPattern: '[a-zA-Z0-9\-]*'

Resources:

  # Two buckets are configured because of two domains
  # One for forshaw.tech (simple resume place-holder)
  # One for developdeploydeliver.com (Blog website)
  # This is done for domain and SEO purposes
  TechWebsiteS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '.', [ 'www', !Ref WebsiteBaseURL]]
      LoggingConfiguration:
        DestinationBucketName: !Ref TechWebsiteS3LogsBucket
        LogFilePrefix: 'logs/'
      WebsiteConfiguration:
        IndexDocument: index.html

  TechWebsiteS3LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '', [ 'logs.', !Ref WebsiteBaseURL]]
      AccessControl: LogDeliveryWrite
      LifecycleConfiguration:
        Rules:
          - Id: DeleteLogsRule
            Prefix: 'logs/'
            Status: Enabled
            ExpirationInDays: 90


  TechWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: TechWebsiteS3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: "PublicReadGetObject"
            Effect: "Allow"
            Principal: "*"
            Action:
              - "s3:GetObject"
            # Change this to only access root folder items
            Resource: !Join [ '', [!GetAtt TechWebsiteS3Bucket.Arn, '/*']]

  TechWebsiteS3ForwardingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref WebsiteBaseURL
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Join [ '', [ 'www.', !Ref WebsiteBaseURL]]

  # Configuration for the blog website bucket.
  BlogWebsiteS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '.', [ 'www', !Ref BlogWebsiteBaseURL]]
      LoggingConfiguration:
        # Log to same location as other logs
        DestinationBucketName: !Ref TechWebsiteS3LogsBucket
        LogFilePrefix: 'logs/'
      WebsiteConfiguration:
        IndexDocument: index.html

  BlogWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: BlogWebsiteS3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: "PublicReadGetObject"
            Effect: "Allow"
            Principal: "*"
            Action:
              - "s3:GetObject"
            Resource: !Join [ '', [!GetAtt BlogWebsiteS3Bucket.Arn, '/*']]

  BlogWebsiteS3ForwardingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BlogWebsiteBaseURL
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Join [ '', [ 'www.', !Ref BlogWebsiteBaseURL]]

  # DO I NEED THIS???
  TechWebsiteHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: "Primary Domain: registered at hover.com"
      Name: !Ref WebsiteBaseURL

  TechWebsiteRouting:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: TechWebsiteHostedZone
      Name: !Join [ '', [ 'www.', !Ref WebsiteBaseURL]]   # For 'www' lookup
      Comment: Alias 'www' records for S3 website bucket
      Type: A
      AliasTarget:
        DNSName: s3-website-ap-southeast-1.amazonaws.com  # Singapore ID: From AWS Service Endpoint Documentation
        HostedZoneId: Z3O0J2DXBE1FTB                      # Singapore ID: From AWS Service Endpoint Documentation

  # DO I NEED THIS???
  BlogWebsiteHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: "Blog Domain: registered at hover.com"
      Name: !Ref BlogWebsiteBaseURL

  BlogWebsiteRouting:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: BlogWebsiteHostedZone
      Name: !Join [ '', [ 'www.', !Ref BlogWebsiteBaseURL]]   # For 'www' lookup
      Comment: Alias 'www' records for S3 website bucket
      Type: A
      AliasTarget:
        DNSName: s3-website-ap-southeast-1.amazonaws.com  # Singapore ID: From AWS Service Endpoint Documentation
        HostedZoneId: Z3O0J2DXBE1FTB                      # Singapore ID: From AWS Service Endpoint Documentation

  TechWebsiteCertificateRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: TechWebsiteHostedZone
      Name: _0fd0c4d871989bbcc210841250213ecc.www.forshaw.tech.
      Comment: Certificate for 'www' access
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !Ref WebsiteCertificateCNAMEValue

  TechWebsiteAPICertificateRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: TechWebsiteHostedZone
      Name: _28af7db909f74dd2f0f2241e27820bbf.api.forshaw.tech.
      Comment: Certificate for 'api' access
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !Ref WebsiteAPICertificateCNAMEValue

  TechWebsiteContactFormEmailSourceIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: !Ref WebsiteContactFormSourceAddress

  TechWebsiteContactFormEmailTargetIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: !Ref WebsiteContactFormTargetAddress


  #####  Deployment Pipeline Definitions  #####

  WebsiteDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow deployment of website data from Source Control to S3
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: CodeStarConnectionAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow   # Allow use of codestar
                Resource:
                  - !Sub 'arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/*'
                Action:
                  - 'codestar-connections:*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      RoleName: !Join [ '', [!Ref WebsiteName, '-website-deployment-role']]

  WebsiteDeploymentArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '', [!Ref WebsiteName, '-website-deploy-artifact-bucket']]

  WebsiteDeploymentPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join [ '', [!Ref WebsiteName, '-website-deployment-pipeline']]
      RoleArn: !GetAtt WebsiteDeploymentRole.Arn
      ArtifactStore:
        Type: S3
        Location:
          Ref: WebsiteDeploymentArtifactBucket
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: GithubSourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              OutputArtifacts:
                - Name: WebsiteSource
              Configuration:
                ConnectionArn: !Ref WebsiteCodeStarConnection
                FullRepositoryId: 'RichardForshaw/resume'
                BranchName: master
                OutputArtifactFormat: CODEBUILD_CLONE_REF
              RunOrder: 1
        -
          Name: Static-Build
          Actions:
            -
              Name: StaticBuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: WebsiteSource
              OutputArtifacts:
                - Name: codebuildForshawTechArtifacts
                - Name: codebuildBlogArtifacts
              Configuration:
                ProjectName:
                  Ref: CodeBuildProjectName
              RunOrder: 1
        -
          Name: Deploy-TechWebsite
          Actions:
            -
              Name: TechWebsiteS3DeploymentAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: codebuildForshawTechArtifacts
              Configuration:
                BucketName:
                  Ref: TechWebsiteS3Bucket
                Extract: true
              RunOrder: 1
        -
          Name: Deploy-BlogWebsite
          Actions:
            -
              Name: BlogWebsiteS3DeploymentAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: codebuildBlogArtifacts
              Configuration:
                BucketName:
                  Ref: BlogWebsiteS3Bucket
                Extract: true
              RunOrder: 1

  WebsiteCodeStarConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: ResumeRepoGitHubConnection
      ProviderType: GitHub

  PipelineFailureNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join [ '', [ !Ref WebsiteName, '-pipeline-failure-topic']]
      DisplayName: !Join [ '', [ 'Pipeline failure notification topic for ', !Ref WebsiteName]]

  PipelineEventTopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            Resource: !Ref PipelineFailureNotificationTopic
      Topics:
        - !Ref PipelineFailureNotificationTopic

  PipelineFailureTopicSMSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref AlertTargetPhoneNumber
      Protocol: sms
      TopicArn: !Ref PipelineFailureNotificationTopic

  WebsiteFailureTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: "aws+error@forshaw.tech"
      Protocol: email
      TopicArn: !Ref PipelineFailureNotificationTopic

  PipelineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [ '', [ '/aws/events/', !Ref WebsiteName, '-deploy-pipeline-group']]  # Seem to have to specify /aws/events/ here
      RetentionInDays: 30

  PipelineSourceFailureRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Catch pipeline source failure events and send to log
      Name: TechWebsitePipelineSourceFailures
      EventPattern:
        source: [ "aws.codepipeline" ]
        detail-type: [ "CodePipeline Stage Execution State Change" ]
        detail:
          state: [ "FAILED" ]
          pipeline: [ !Ref WebsiteDeploymentPipeline ]
      Targets:
        -
          Arn: !GetAtt PipelineLogGroup.Arn
          Id: !Join [ '', [!Ref WebsiteName, '-deploy-pipeline-group']]
        -
          Arn: !Ref PipelineFailureNotificationTopic
          Id: !Join [ '', [!Ref WebsiteName, '-deploy-pipeline-topic']]
          InputPath: '$.detail'


Outputs:
  TechWebsiteHostedZoneID:
    Description: Cross-Stack export of Hosted Zone ID of this Route53 Stack
    Value: !Ref TechWebsiteHostedZone
    Export:
        Name: !Sub "${AWS::StackName}-HostedZoneID"

  TechWebsiteRootDomainURL:
    Description: Cross-Stack export of Route53 root domain
    Value: !Ref WebsiteBaseURL
    Export:
        Name: !Sub "${AWS::StackName}-RootDomainURL"

  BlogWebsiteRootDomainURL:
    Description: Cross-Stack export of Route53 root domain for blog
    Value: !Ref BlogWebsiteBaseURL
    Export:
        Name: !Sub "${AWS::StackName}-BlogRootDomainURL"

  TechWebsiteContactFormSourceEmail:
    Description: The source email for sending an email from a contact form submission
    Value: !Ref WebsiteContactFormSourceAddress
    Export:
        Name: !Sub "${AWS::StackName}-ContactFormSourceEmail"

  TechWebsiteContactFormTargetEmail:
    Description: The target email for sending an email from a contact form submission
    Value: !Ref WebsiteContactFormTargetAddress
    Export:
        Name: !Sub "${AWS::StackName}-ContactFormTargetEmail"

  TechWebsiteCodeStarConnectionARN:
    Description: ARN of codestar connection to GitHub repository
    Value: !Ref WebsiteCodeStarConnection
    Export:
      Name: !Sub "${AWS::StackName}-TechWebsiteCodeStarConnectionARN"

  TechWebsiteAccessLogsBucket:
    Description: Name of the S3 bucket capturing the website access logs
    Value: !Ref TechWebsiteS3LogsBucket
    Export:
      Name: !Sub "${AWS::StackName}-TechWebsiteAccessLogsBucket"

  TechWebsiteAccessLogsBucketARN:
    Description: ARN of the S3 bucket capturing the website access logs
    Value: !GetAtt TechWebsiteS3LogsBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-TechWebsiteAccessLogsBucketARN"

  TechWebsiteFailureNotificationTopicARN:
    Description: ARN of the SNS topic for notifying of failures
    Value: !Ref PipelineFailureNotificationTopic
    Export:
      Name: !Sub "${AWS::StackName}-FailureNotificationTopic"
